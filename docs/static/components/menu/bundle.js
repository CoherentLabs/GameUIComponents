/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./components/menu/demo/demo.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/menu/demo/demo.js":
/*!**************************************!*\
  !*** ./components/menu/demo/demo.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var coherent_gameface_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! coherent-gameface-components */ \"./components/menu/node_modules/coherent-gameface-components/components.js\");\n/* harmony import */ var _umd_menu_development_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../umd/menu.development.js */ \"./components/menu/umd/menu.development.js\");\n/* harmony import */ var _umd_menu_development_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_umd_menu_development_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var postmessage_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! postmessage-polyfill */ \"./components/menu/node_modules/postmessage-polyfill/postmessage.js\");\n/* harmony import */ var postmessage_polyfill__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(postmessage_polyfill__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var whatwg_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! whatwg-fetch */ \"./components/menu/node_modules/whatwg-fetch/fetch.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Coherent Labs AD. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\nwindow.postMessage = function(message) {\n    Object(postmessage_polyfill__WEBPACK_IMPORTED_MODULE_2__[\"pm\"])({\n        origin: 'http://127.0.0.1/:3000',\n        target: window,\n        data: message\n    });\n};\n\n//# sourceURL=webpack:///./components/menu/demo/demo.js?");

/***/ }),

/***/ "./components/menu/node_modules/coherent-gameface-components/components.js":
/*!*********************************************************************************!*\
  !*** ./components/menu/node_modules/coherent-gameface-components/components.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Coherent Labs AD. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nconst newLinesRegExp = new RegExp('^\\s+|\\s+$', 'g');\r\n\r\nconst components = function () {\r\n    const GF_COMPONENT_SLOT_TAG_NAME = 'component-slot';\r\n    const KEYCODES = {\r\n        DOWN: 40,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        UP: 38,\r\n        HOME: 36,\r\n        END: 35,\r\n        ENTER: 13,\r\n        ESCAPE: 27,\r\n        TAB: 9,\r\n        SHIFT: 16,\r\n        CTRL: 17,\r\n        SPACE: 32,\r\n    };\r\n\r\n    class GamefaceComponents {\r\n        constructor() {\r\n            this.definedElements = {};\r\n            this.imported = this.imported || [];\r\n            this.KEYCODES = KEYCODES;\r\n        }\r\n\r\n        /**\r\n         * Create and add a script tag with given url.\r\n         * @param {string} script\r\n        */\r\n        importScript(url) {\r\n            let script = document.createElement('script');\r\n            script.setAttribute('src', url);\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        /**\r\n         * Loads an html by given url.\r\n         * @param {string} url\r\n         * @returns {promise} resolved with the html as text.\r\n        */\r\n        loadHTML(url) {\r\n            return this.loadResource(url).then((result) => {\r\n                return result.template;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Creates a promise which resolves when a custom element was defined.\r\n         * Saves the promise for each defined component.\r\n         * @param {string} name - the name of the custom element\r\n         * @returns {promise} - the previously saved promise it any or a new one\r\n        */\r\n        whenDefined(name) {\r\n            if (this.definedElements[name] !== undefined) {\r\n                return this.definedElements[name].promise;\r\n            }\r\n\r\n            const defined = this.definedElements[name] = {};\r\n            defined.promise = new Promise((resolve, reject) => {\r\n                defined.resolve = resolve;\r\n                defined.reject = reject;\r\n            });\r\n            return defined.promise;\r\n        }\r\n\r\n        /**\r\n         * Defines a custom element.\r\n         * @param {string} name - the name of the element.\r\n         * @param {Object} element - the object which describes the element.\r\n        */\r\n        defineCustomElement(name, element) {\r\n            if(this.definedElements[name]) return;\r\n            this.whenDefined(name);\r\n            customElements.define(name, element);\r\n            this.definedElements[name].resolve(element);\r\n        }\r\n\r\n        /**\r\n         * Imports a component by given url.\r\n         * It will automatically try to import style.css and script.js if these\r\n         * files' names were not explicitly specified.\r\n         * @param {string} url - the url of the component\r\n        */\r\n        importComponent(url) {\r\n            requestAnimationFrame(() => {\r\n                this.importScript(url + '/script.js');\r\n            })\r\n        }\r\n\r\n        removeSlashes(path) {\r\n            return path.replace(/[/|\\\\]/g, '');\r\n        }\r\n\r\n        /**\r\n         * Remove new lines from the beginning of templates,\r\n         * because template.firstChild.cloneNode will clone an empty\r\n         * string and will return an empty template.\r\n        */\r\n        removeNewLines(template) {\r\n            return template.replace(newLinesRegExp, '').trim();\r\n        }\r\n\r\n        /**\r\n         * Removes the copyright notice from the template\r\n         * @param {string} template\r\n         * @returns {string} the template without the copyright notice\r\n        */\r\n        removeCopyrightNotice(template) {\r\n            return template.replace('<!--Copyright (c) Coherent Labs AD. All rights reserved. -->', '').trim();\r\n        }\r\n\r\n        /**\r\n         * Used when the element has already been rendered.\r\n         * Return the already rendered template instead of\r\n         * loading and slotting its elements.\r\n         *\r\n         * @param {HTMLElement} component - the component that was rendered\r\n         * @returns {Promise<HTMLElement>} - a promise that will resolve with the rendered template\r\n        */\r\n        resolveWithTemplate(component) {\r\n            return new Promise((resolve) => {\r\n                resolve({\r\n                    template: component.template.cloneNode(true),\r\n                    url: component.url\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Uses an XMLHttpRequest to load an external file.\r\n         * @param {string} url - the url of the file.\r\n         * @returns {promise} - a promise that is resolved with the file's text content.\r\n        */\r\n       loadResource(component) {\r\n        if (component.template) {\r\n            if(component.isRendered) return this.resolveWithTemplate(component);\r\n            const element = document.createElement('div');\r\n            const template = this.removeCopyrightNotice(component.template);\r\n            element.innerHTML = this.removeNewLines(template);\r\n\r\n            return new Promise((resolve) => {\r\n                resolve({\r\n                    template: element.firstChild.cloneNode(true),\r\n                    url: component.url\r\n                });\r\n            });\r\n        }\r\n\r\n        if (window.__optimize) {\r\n            const id = this.removeSlashes(component.url);\r\n            const element = document.getElementById(id).firstChild;\r\n            // fallback to XHR\r\n            if (!element) return this.requestResource(component.url);\r\n\r\n            return new Promise((resolve) => {\r\n                resolve({template: element.cloneNode(true), url: component.url});\r\n            });\r\n        }\r\n\r\n        return this.requestResource(component.url);\r\n    }\r\n\r\n\r\n        /**\r\n         * Execute an XMLHttpRequest to load a resource by url.\r\n         * @param {string} url - the path to the resource\r\n         * @returns {promise} - promise which resolves with the loaded resource\r\n        */\r\n        requestResource(url) {\r\n            const request = new XMLHttpRequest();\r\n            const promise = new Promise(function (resolve, reject) {\r\n                request.onload = (response) => {\r\n                    if (request.status == 200) {\r\n                        const tempEl = document.createElement('div');\r\n                        tempEl.innerHTML = request.responseText;\r\n                        resolve({template: tempEl.firstChild.cloneNode(true), url: url});\r\n                    } else {\r\n                        reject(response);\r\n                    }\r\n                };\r\n                request.onerror = reject;\r\n            });\r\n            request.open('GET', url);\r\n            request.send();\r\n            return promise;\r\n        }\r\n\r\n        /**\r\n         * Recursively finds the slot elements in a given element.\r\n         * @param {HTMLElement} parent - the element which is searched for slots.\r\n         * @param {object} result - a key:value object containing the slot elements\r\n         * under their data-name as value:\r\n         * { <my-slot-name>: HTMLElement }\r\n         * @returns {Object} result\r\n        */\r\n        findSlots(parent, parentElName, result = {}) {\r\n            const children = parent.children;\r\n            const length = children.length;\r\n\r\n            for (let i = 0; i < length; ++i) {\r\n                const child = children[i];\r\n                const childTagName = child.tagName.toLowerCase();\r\n\r\n                if (child instanceof ComponentSlot) {\r\n                    const name = child.dataset.name;\r\n                    if (!result[name]) result[name] = [];\r\n                    result[name].push(child);\r\n                    this.findSlots(child, parentElName, result);\r\n                } else if (child.hasAttribute('slot')) {\r\n                    const slot = child.getAttribute('slot');\r\n                    if (!result[slot]) result[slot] = [];\r\n                    result[slot].push(child);\r\n                    this.findSlots(child, parentElName, result);\r\n                // the scrollable container is the ONLY component that can hold\r\n                // slots of another elements; we allow this in order achieve\r\n                // better integration of the scrollbar inside other components\r\n                // The WebComponents and the standard slot elements don't support\r\n                // such behavior; an element handles only its own slots. The scrollable\r\n                // container is an exception from this rule.\r\n                } else if (childTagName === 'scrollable-container'\r\n                     || (childTagName !== GF_COMPONENT_SLOT_TAG_NAME\r\n                     && parentElName !== childTagName\r\n                     && !this.definedElements[childTagName])) {\r\n                    // if the child is another nested element don't look for slots in it\r\n                    this.findSlots(child, parentElName, result);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        replaceSlots(source, target) {\r\n            const fakeRoot = target[0];\r\n            if (source.length && fakeRoot.childNodes.length) {\r\n                while (fakeRoot.firstChild) {\r\n                    fakeRoot.removeChild(fakeRoot.lastChild);\r\n                }\r\n            }\r\n            // remove the slot so that it can be replaced\r\n            const parent = fakeRoot.parentNode;\r\n            parent.removeChild(fakeRoot);\r\n\r\n            for (let i = 0; i < source.length; ++i) {\r\n                parent.appendChild(source[i]);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Transfers the slottable elements into their slots.\r\n         * @param {HTMLElement} source - the element containing the slottable elements.\r\n         * @param {HTMLElement} target - the element containing the slots elements.\r\n        */\r\n        transferContent(source, target) {\r\n            while (target.childNodes.length > 0) {\r\n                const nodes = target.childNodes;\r\n                target.removeChild(nodes[nodes.length - 1]);\r\n            }\r\n            while (source.childNodes.length > 0) {\r\n                const nodes = source.childNodes;\r\n                const node = nodes[0];\r\n                source.removeChild(node);\r\n                target.appendChild(node);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Renderes an element only if it wasn't rendered before that\r\n         * @param {HTMLElement} element\r\n         * @returns {boolean} - true if it was rendered, false if not\r\n        */\r\n        renderOnce(element) {\r\n            if (element.isRendered) return false;\r\n\r\n            this.render(element);\r\n            element.isRendered = true;\r\n            return true;\r\n        }\r\n\r\n        /**\r\n        * Renders an element's content into its template.\r\n        * @param {HTMLElement} element - the element into which to render the content\r\n        */\r\n        render(element) {\r\n            const templateRoot = document.createElement('div')\r\n            templateRoot.appendChild(element.template);\r\n\r\n            const parentElName = element.tagName.toLowerCase();\r\n\r\n            const templateSlots = this.findSlots(templateRoot, parentElName);\r\n            const userSlots = this.findSlots(element, parentElName);\r\n\r\n            // use for...of instead of for...in for better performance\r\n            const userSlotsKeys = Object.keys(userSlots);\r\n            const templateSlotsKeys = Object.keys(templateSlots);\r\n\r\n            // there's no point in looping over userSlots if there aren't\r\n            // corresponding template slots\r\n            if (templateSlotsKeys.length) {\r\n                for (let userSlot of userSlotsKeys) {\r\n                    if (!userSlots[userSlot] || !templateSlots[userSlot]) continue;\r\n                    this.replaceSlots(userSlots[userSlot], templateSlots[userSlot]);\r\n                }\r\n            }\r\n\r\n            this.transferContent(templateRoot, element);\r\n        }\r\n    }\r\n\r\n    const components = new GamefaceComponents();\r\n\r\n    class ComponentImport extends HTMLElement {\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        connectedCallback() {\r\n            const url = `/components/${this.dataset.url}/`;\r\n            const componentName = `gameface-${this.dataset.url}`;\r\n\r\n            if (components.imported.indexOf(componentName) === -1) {\r\n                components.importComponent(url);\r\n                components.imported.push(componentName);\r\n            }\r\n            this.appendChild(document.createElement(componentName));\r\n        }\r\n    }\r\n\r\n    class ComponentSlot extends HTMLElement {\r\n        constructor() {\r\n            super();\r\n\r\n            this.originalAppendChild = this.appendChild;\r\n            this.originalInsertBefore = this.insertBefore;\r\n            this.originalReplaceChild = this.replaceChild;\r\n            this.originalRemoveChild = this.removeChild;\r\n\r\n            this.appendChild = (node) => {\r\n                const child = this.originalAppendChild(node);\r\n                this.disptachSlotChange(child);\r\n\r\n                return child;\r\n            };\r\n\r\n            this.insertBefore = (newNode, referenceNode) => {\r\n                const child = this.originalInsertBefore(newNode, referenceNode);\r\n                this.disptachSlotChange(child);\r\n\r\n                return child;\r\n            };\r\n\r\n            this.replaceChild = (newChild, oldChild) => {\r\n                const replacedNode = this.originalReplaceChild(newChild, oldChild);\r\n                this.disptachSlotChange(replacedNode);\r\n\r\n                return replacedNode;\r\n            };\r\n\r\n            this.removeChild = (child) => {\r\n                const removedNode = this.originalRemoveChild(child);\r\n                this.disptachSlotChange(removedNode);\r\n\r\n                return removedNode;\r\n            };\r\n        }\r\n\r\n        disptachSlotChange(child) {\r\n            this.dispatchEvent(new CustomEvent('slotchange'), {\r\n                target: this,\r\n                child: child\r\n            });\r\n        }\r\n    }\r\n\r\n    components.defineCustomElement('component-import', ComponentImport);\r\n    components.defineCustomElement(GF_COMPONENT_SLOT_TAG_NAME, ComponentSlot);\r\n\r\n    return components;\r\n};\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (components());\r\n\n\n//# sourceURL=webpack:///./components/menu/node_modules/coherent-gameface-components/components.js?");

/***/ }),

/***/ "./components/menu/node_modules/postmessage-polyfill/postmessage.js":
/*!**************************************************************************!*\
  !*** ./components/menu/node_modules/postmessage-polyfill/postmessage.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n The MIT License\n\n Copyright (c) 2010 Daniel Park (http://metaweb.com, http://postmessage.freebaseapps.com)\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n **/\nvar NO_JQUERY = {};\n(function(window, $, undefined) {\n\n     if (!(\"console\" in window)) {\n         var c = window.console = {};\n         c.log = c.warn = c.error = c.debug = function(){};\n     }\n\n     if ($ === NO_JQUERY) {\n         // jQuery is optional\n         $ = {\n             fn: {},\n             extend: function() {\n                 var a = arguments[0];\n                 for (var i=1,len=arguments.length; i<len; i++) {\n                     var b = arguments[i];\n                     for (var prop in b) {\n                         a[prop] = b[prop];\n                     }\n                 }\n                 return a;\n             }\n         };\n     }\n\n     $.fn.pm = function() {\n         console.log(\"usage: \\nto send:    $.pm(options)\\nto receive: $.pm.bind(type, fn, [origin])\");\n         return this;\n     };\n\n     // send postmessage\n     $.pm = window.pm = function(options) {\n         pm.send(options);\n     };\n\n     // bind postmessage handler\n     $.pm.bind = window.pm.bind = function(type, fn, origin, hash, async_reply) {\n         pm.bind(type, fn, origin, hash, async_reply === true);\n     };\n\n     // unbind postmessage handler\n     $.pm.unbind = window.pm.unbind = function(type, fn) {\n         pm.unbind(type, fn);\n     };\n\n     // default postmessage origin on bind\n     $.pm.origin = window.pm.origin = null;\n\n     // default postmessage polling if using location hash to pass postmessages\n     $.pm.poll = window.pm.poll = 200;\n\n     var pm = {\n\n         send: function(options) {\n             var o = $.extend({}, pm.defaults, options),\n             target = o.target;\n             if (!o.target) {\n                 console.warn(\"postmessage target window required\");\n                 return;\n             }\n             if (!o.type) {\n                 console.warn(\"postmessage type required\");\n                 return;\n             }\n             var msg = {data:o.data, type:o.type};\n             if (o.success) {\n                 msg.callback = pm._callback(o.success);\n             }\n             if (o.error) {\n                 msg.errback = pm._callback(o.error);\n             }\n             if ((\"postMessage\" in target) && !o.hash) {\n                 pm._bind();\n                 target.postMessage(JSON.stringify(msg), o.origin || '*');\n             }\n             else {\n                 pm.hash._bind();\n                 pm.hash.send(o, msg);\n             }\n         },\n\n         bind: function(type, fn, origin, hash, async_reply) {\n           pm._replyBind ( type, fn, origin, hash, async_reply );\n         },\n       \n         _replyBind: function(type, fn, origin, hash, isCallback) {\n           if ((\"postMessage\" in window) && !hash) {\n               pm._bind();\n           }\n           else {\n               pm.hash._bind();\n           }\n           var l = pm.data(\"listeners.postmessage\");\n           if (!l) {\n               l = {};\n               pm.data(\"listeners.postmessage\", l);\n           }\n           var fns = l[type];\n           if (!fns) {\n               fns = [];\n               l[type] = fns;\n           }\n           fns.push({fn:fn, callback: isCallback, origin:origin || $.pm.origin});\n         },\n\n         unbind: function(type, fn) {\n             var l = pm.data(\"listeners.postmessage\");\n             if (l) {\n                 if (type) {\n                     if (fn) {\n                         // remove specific listener\n                         var fns = l[type];\n                         if (fns) {\n                             var m = [];\n                             for (var i=0,len=fns.length; i<len; i++) {\n                                 var o = fns[i];\n                                 if (o.fn !== fn) {\n                                     m.push(o);\n                                 }\n                             }\n                             l[type] = m;\n                         }\n                     }\n                     else {\n                         // remove all listeners by type\n                         delete l[type];\n                     }\n                 }\n                 else {\n                     // unbind all listeners of all type\n                     for (var i in l) {\n                       delete l[i];\n                     }\n                 }\n             }\n         },\n\n         data: function(k, v) {\n             if (v === undefined) {\n                 return pm._data[k];\n             }\n             pm._data[k] = v;\n             return v;\n         },\n\n         _data: {},\n\n         _CHARS: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''),\n\n         _random: function() {\n             var r = [];\n             for (var i=0; i<32; i++) {\n                 r[i] = pm._CHARS[0 | Math.random() * 32];\n             };\n             return r.join(\"\");\n         },\n\n         _callback: function(fn) {\n             var cbs = pm.data(\"callbacks.postmessage\");\n             if (!cbs) {\n                 cbs = {};\n                 pm.data(\"callbacks.postmessage\", cbs);\n             }\n             var r = pm._random();\n             cbs[r] = fn;\n             return r;\n         },\n\n         _bind: function() {\n             // are we already listening to message events on this w?\n             if (!pm.data(\"listening.postmessage\")) {\n                 if (window.addEventListener) {\n                     window.addEventListener(\"message\", pm._dispatch, false);\n                 }\n                 else if (window.attachEvent) {\n                     window.attachEvent(\"onmessage\", pm._dispatch);\n                 }\n                 pm.data(\"listening.postmessage\", 1);\n             }\n         },\n\n         _dispatch: function(e) {\n             //console.log(\"$.pm.dispatch\", e, this);\n             try {\n                 var msg = JSON.parse(e.data);\n             }\n             catch (ex) {\n                 console.warn(\"postmessage data invalid json: \", ex);\n                 return;\n             }\n             if (!msg.type) {\n                 console.warn(\"postmessage message type required\");\n                 return;\n             }\n             var cbs = pm.data(\"callbacks.postmessage\") || {},\n             cb = cbs[msg.type];\n             if (cb) {\n                 cb(msg.data);\n             }\n             else {\n                 var l = pm.data(\"listeners.postmessage\") || {};\n                 var fns = l[msg.type] || [];\n                 for (var i=0,len=fns.length; i<len; i++) {\n                     var o = fns[i];\n                     if (o.origin && o.origin !== '*' && e.origin !== o.origin) {\n                         console.warn(\"postmessage message origin mismatch\", e.origin, o.origin);\n                         if (msg.errback) {\n                             // notify post message errback\n                             var error = {\n                                 message: \"postmessage origin mismatch\",\n                                 origin: [e.origin, o.origin]\n                             };\n                             pm.send({target:e.source, data:error, type:msg.errback});\n                         }\n                         continue;\n                     }\n\n                     function sendReply ( data ) {\n                       if (msg.callback) {\n                           pm.send({target:e.source, data:data, type:msg.callback});\n                       }\n                     }\n                     \n                     try {\n                         if ( o.callback ) {\n                           o.fn(msg.data, sendReply, e);\n                         } else {\n                           sendReply ( o.fn(msg.data, e) );\n                         }\n                     }\n                     catch (ex) {\n                         if (msg.errback) {\n                             // notify post message errback\n                             pm.send({target:e.source, data:ex, type:msg.errback});\n                         } else {\n                             throw ex;\n                         }\n                     }\n                 };\n             }\n         }\n     };\n\n     // location hash polling\n     pm.hash = {\n\n         send: function(options, msg) {\n             //console.log(\"hash.send\", target_window, options, msg);\n             var target_window = options.target,\n             target_url = options.url;\n             if (!target_url) {\n                 console.warn(\"postmessage target window url is required\");\n                 return;\n             }\n             target_url = pm.hash._url(target_url);\n             var source_window,\n             source_url = pm.hash._url(window.location.href);\n             if (window == target_window.parent) {\n                 source_window = \"parent\";\n             }\n             else {\n                 try {\n                     for (var i=0,len=parent.frames.length; i<len; i++) {\n                         var f = parent.frames[i];\n                         if (f == window) {\n                             source_window = i;\n                             break;\n                         }\n                     };\n                 }\n                 catch(ex) {\n                     // Opera: security error trying to access parent.frames x-origin\n                     // juse use window.name\n                     source_window = window.name;\n                 }\n             }\n             if (source_window == null) {\n                 console.warn(\"postmessage windows must be direct parent/child windows and the child must be available through the parent window.frames list\");\n                 return;\n             }\n             var hashmessage = {\n                 \"x-requested-with\": \"postmessage\",\n                 source: {\n                     name: source_window,\n                     url: source_url\n                 },\n                 postmessage: msg\n             };\n             var hash_id = \"#x-postmessage-id=\" + pm._random();\n             target_window.location = target_url + hash_id + encodeURIComponent(JSON.stringify(hashmessage));\n         },\n\n         _regex: /^\\#x\\-postmessage\\-id\\=(\\w{32})/,\n\n         _regex_len: \"#x-postmessage-id=\".length + 32,\n\n         _bind: function() {\n             // are we already listening to message events on this w?\n             if (!pm.data(\"polling.postmessage\")) {\n                 setInterval(function() {\n                                 var hash = \"\" + window.location.hash,\n                                 m = pm.hash._regex.exec(hash);\n                                 if (m) {\n                                     var id = m[1];\n                                     if (pm.hash._last !== id) {\n                                         pm.hash._last = id;\n                                         pm.hash._dispatch(hash.substring(pm.hash._regex_len));\n                                     }\n                                 }\n                             }, $.pm.poll || 200);\n                 pm.data(\"polling.postmessage\", 1);\n             }\n         },\n\n         _dispatch: function(hash) {\n             if (!hash) {\n                 return;\n             }\n             try {\n                 hash = JSON.parse(decodeURIComponent(hash));\n                 if (!(hash['x-requested-with'] === 'postmessage' &&\n                       hash.source && hash.source.name != null && hash.source.url && hash.postmessage)) {\n                     // ignore since hash could've come from somewhere else\n                     return;\n                 }\n             }\n             catch (ex) {\n                 // ignore since hash could've come from somewhere else\n                 return;\n             }\n             var msg = hash.postmessage,\n             cbs = pm.data(\"callbacks.postmessage\") || {},\n             cb = cbs[msg.type];\n             if (cb) {\n                 cb(msg.data);\n             }\n             else {\n                 var source_window;\n                 if (hash.source.name === \"parent\") {\n                     source_window = window.parent;\n                 }\n                 else {\n                     source_window = window.frames[hash.source.name];\n                 }\n                 var l = pm.data(\"listeners.postmessage\") || {};\n                 var fns = l[msg.type] || [];\n                 for (var i=0,len=fns.length; i<len; i++) {\n                     var o = fns[i];\n                     if (o.origin) {\n                         var origin = /https?\\:\\/\\/[^\\/]*/.exec(hash.source.url)[0];\n                         if (o.origin !== '*' && origin !== o.origin) {\n                             console.warn(\"postmessage message origin mismatch\", origin, o.origin);\n                             if (msg.errback) {\n                                 // notify post message errback\n                                 var error = {\n                                     message: \"postmessage origin mismatch\",\n                                     origin: [origin, o.origin]\n                                 };\n                                 pm.send({target:source_window, data:error, type:msg.errback, hash:true, url:hash.source.url});\n                             }\n                             continue;\n                         }\n                     }\n\n                     function sendReply ( data ) {\n                       if (msg.callback) {\n                         pm.send({target:source_window, data:data, type:msg.callback, hash:true, url:hash.source.url});\n                       }\n                     }\n                     \n                     try {\n                         if ( o.callback ) {\n                           o.fn(msg.data, sendReply);\n                         } else {\n                           sendReply ( o.fn(msg.data) );\n                         }\n                     }\n                     catch (ex) {\n                         if (msg.errback) {\n                             // notify post message errback\n                             pm.send({target:source_window, data:ex, type:msg.errback, hash:true, url:hash.source.url});\n                         } else {\n                             throw ex;\n                         }\n                     }\n                 };\n             }\n         },\n\n         _url: function(url) {\n             // url minus hash part\n             return (\"\"+url).replace(/#.*$/, \"\");\n         }\n\n     };\n\n     $.extend(pm, {\n                  defaults: {\n                      target: null,  /* target window (required) */\n                      url: null,     /* target window url (required if no window.postMessage or hash == true) */\n                      type: null,    /* message type (required) */\n                      data: null,    /* message data (required) */\n                      success: null, /* success callback (optional) */\n                      error: null,   /* error callback (optional) */\n                      origin: \"*\",   /* postmessage origin (optional) */\n                      hash: false    /* use location hash for message passing (optional) */\n                  }\n              });\n\n })(this, typeof jQuery === \"undefined\" ? NO_JQUERY : jQuery);\n\n/**\n * http://www.JSON.org/json2.js\n **/\nif (! (\"JSON\" in window && window.JSON)){JSON={}}(function(){function f(n){return n<10?\"0\"+n:n}if(typeof Date.prototype.toJSON!==\"function\"){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+\"-\"+f(this.getUTCMonth()+1)+\"-\"+f(this.getUTCDate())+\"T\"+f(this.getUTCHours())+\":\"+f(this.getUTCMinutes())+\":\"+f(this.getUTCSeconds())+\"Z\"};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf()}}var cx=/[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,escapable=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,gap,indent,meta={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?'\"'+string.replace(escapable,function(a){var c=meta[a];return typeof c===\"string\"?c:\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+string+'\"'}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&&typeof value===\"object\"&&typeof value.toJSON===\"function\"){value=value.toJSON(key)}if(typeof rep===\"function\"){value=rep.call(holder,key,value)}switch(typeof value){case\"string\":return quote(value);case\"number\":return isFinite(value)?String(value):\"null\";case\"boolean\":case\"null\":return String(value);case\"object\":if(!value){return\"null\"}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===\"[object Array]\"){length=value.length;for(i=0;i<length;i+=1){partial[i]=str(i,value)||\"null\"}v=partial.length===0?\"[]\":gap?\"[\\n\"+gap+partial.join(\",\\n\"+gap)+\"\\n\"+mind+\"]\":\"[\"+partial.join(\",\")+\"]\";gap=mind;return v}if(rep&&typeof rep===\"object\"){length=rep.length;for(i=0;i<length;i+=1){k=rep[i];if(typeof k===\"string\"){v=str(k,value);if(v){partial.push(quote(k)+(gap?\": \":\":\")+v)}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?\": \":\":\")+v)}}}}v=partial.length===0?\"{}\":gap?\"{\\n\"+gap+partial.join(\",\\n\"+gap)+\"\\n\"+mind+\"}\":\"{\"+partial.join(\",\")+\"}\";gap=mind;return v}}if(typeof JSON.stringify!==\"function\"){JSON.stringify=function(value,replacer,space){var i;gap=\"\";indent=\"\";if(typeof space===\"number\"){for(i=0;i<space;i+=1){indent+=\" \"}}else{if(typeof space===\"string\"){indent=space}}rep=replacer;if(replacer&&typeof replacer!==\"function\"&&(typeof replacer!==\"object\"||typeof replacer.length!==\"number\")){throw new Error(\"JSON.stringify\")}return str(\"\",{\"\":value})}}if(typeof JSON.parse!==\"function\"){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&&typeof value===\"object\"){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v}else{delete value[k]}}}}return reviver.call(holder,key,value)}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)})}if(/^[\\],:{}\\s]*$/.test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\"))){j=eval(\"(\"+text+\")\");return typeof reviver===\"function\"?walk({\"\":j},\"\"):j}throw new SyntaxError(\"JSON.parse\")}}}());\n\n\n//# sourceURL=webpack:///./components/menu/node_modules/postmessage-polyfill/postmessage.js?");

/***/ }),

/***/ "./components/menu/node_modules/whatwg-fetch/fetch.js":
/*!************************************************************!*\
  !*** ./components/menu/node_modules/whatwg-fetch/fetch.js ***!
  \************************************************************/
/*! exports provided: Headers, Request, Response, DOMException, fetch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Request\", function() { return Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Response\", function() { return Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMException\", function() { return DOMException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  (typeof global !== 'undefined' && global)\n\nvar support = {\n  searchParams: 'URLSearchParams' in global,\n  iterable: 'Symbol' in global && 'iterator' in Symbol,\n  blob:\n    'FileReader' in global &&\n    'Blob' in global &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in global,\n  arrayBuffer: 'ArrayBuffer' in global\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this)\n        if (isConsumed) {\n          return isConsumed\n        }\n        if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nfunction Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : ''\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nvar DOMException = global.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && global.location.href ? global.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer &&\n        request.headers.get('Content-Type') &&\n        request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Headers = Headers\n  global.Request = Request\n  global.Response = Response\n}\n\n\n//# sourceURL=webpack:///./components/menu/node_modules/whatwg-fetch/fetch.js?");

/***/ }),

/***/ "./components/menu/umd/menu.development.js":
/*!*************************************************!*\
  !*** ./components/menu/umd/menu.development.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n     true ? factory(__webpack_require__(/*! coherent-gameface-components */ \"./components/menu/node_modules/coherent-gameface-components/components.js\")) :\n    undefined;\n}(this, (function (components) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var components__default = /*#__PURE__*/_interopDefaultLegacy(components);\n\n    var template = \"<!--Copyright (c) Coherent Labs AD. All rights reserved. -->\\n<component-slot data-name=\\\"menu-item\\\">\\n    <menu-item>First Item</menu-item>\\n    <menu-item>Second Item</menu-item>\\n</component-slot>\";\n\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Coherent Labs AD. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n\r\n    const TAG_NAMES = 'gameface-menu, gameface-left-menu, gameface-right-menu, gameface-bottom-menu';\n\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Coherent Labs AD. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Helper function used to check if an element is a child of another element\r\n     *\r\n     * @param {HTMLElement} parent\r\n     * @param {HTMLElement} child\r\n     * @returns {boolean} - true if the child is actually a child of the parent and false if not\r\n    */\r\n    function isDescendant(parent, child) {\r\n        var node = child.parentNode;\r\n        while (node != null) {\r\n            if (node == parent) {\r\n                return true;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const KEYCODES = components__default['default'].KEYCODES;\r\n\r\n    const KEY_MAPPING = {\r\n        FORWARD: KEYCODES.RIGHT,\r\n        BACK: KEYCODES.LEFT,\r\n        OPEN_SUBMENU: KEYCODES.DOWN,\r\n        CLOSE: KEYCODES.ESCAPE,\r\n        SELECT: KEYCODES.ENTER,\r\n    };\r\n\r\n    class GamefaceMenu extends HTMLElement {\r\n        constructor() {\r\n            super();\r\n\r\n            this.keyMapping = KEY_MAPPING;\r\n            this.template = template;\r\n            this.orientation = this.getAttribute('orientation');\r\n\r\n            this.onKeyDown = this.onKeyDown.bind(this);\r\n            this.onClick = this.onClick.bind(this);\r\n            this.onFocusOut = this.onFocusOut.bind(this);\r\n\r\n            this.url = '/components/menu/template.html';\r\n        }\r\n\r\n        connectedCallback() {\r\n            // TODO: fix, this is a hack\r\n            // we'll fix it in a task\r\n            if (this.wasConnected) return;\r\n            this.wasConnected = true;\r\n\r\n            components__default['default'].loadResource(this, this.template)\r\n                .then((result) => {\r\n                    this.template = result.template;\r\n                    components__default['default'].render(this);\r\n\r\n                    this.removeEventListeners();\r\n                    this.attachEventListeners();\r\n\r\n                    // setup the initial position of the menu items\r\n                    this.setupMenuItems(true);\r\n                    this.setOrientation();\r\n                    this.setAttribute('tabindex', 0);\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                });\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Attaches click event listeners\r\n        */\r\n       removeEventListeners () {\r\n            this.removeEventListener('keydown', this.onKeyDown);\r\n            this.removeEventListener('focusout', this.onFocusOut);\r\n\r\n            const menuItems = this.querySelectorAll('menu-item');\r\n            for(let i = 0; i < menuItems.length; i++) {\r\n                menuItems[i].removeEventListener('click', this.onClick);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Attaches click event listeners to all menu-item elements in this menu\r\n        */\r\n        attachEventListeners () {\r\n            this.addEventListener('keydown', this.onKeyDown);\r\n            this.addEventListener('focusout', this.onFocusOut);\r\n\r\n            const menuItems = this.querySelectorAll('menu-item');\r\n            for(let i = 0; i < menuItems.length; i++) {\r\n                menuItems[i].addEventListener('click', this.onClick);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets the positions of the nested menus; doesn't need to be recursive\r\n         * because each menu calls it for itself\r\n         * @param {boolean} hide - the nested menus need to be hidden, by default the\r\n         * setup function won't hide them, but when the menus are rendered for the\r\n         * first time they'll be hidden\r\n        */\r\n        setupMenuItems(hide = false) {\r\n            const menuItems = this.getAllMenuItems();\r\n\r\n            for(let i = 0; i < menuItems.length; i++) {\r\n                const nested = menuItems[i].querySelector(TAG_NAMES);\r\n\r\n                if (!nested) continue;\r\n\r\n                const parentPosition = menuItems[i].getBoundingClientRect();\r\n\r\n                this.setPosition(nested, parentPosition);\r\n\r\n                if (hide) nested.hide();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Sets an inline style to properly position the element\r\n         * Different menus have use different properties - top, left, right or bottom\r\n         *\r\n         * @param {HTMLElement} element - the element that needs to be positioned\r\n         * @param {DOMRect} parentPosition - the bounding box of the parent element\r\n        */\r\n        setPosition(element, parentPosition) {\r\n            element.style.left = '0px';\r\n            element.style.top = parentPosition.height + 'px';\r\n        }\r\n\r\n        /**\r\n         * Called when the menu looses focus.\r\n         * @param {FocusEvent} event\r\n        */\r\n        onFocusOut(event) {\r\n            // get the element which received focus\r\n            const receivedFocus = event.relatedTarget;\r\n            // get the element which lost focus\r\n            const lostFocus = event.target;\r\n\r\n            if (receivedFocus !== null && isDescendant(this, receivedFocus)) {\r\n                return;\r\n            }\r\n\r\n            // if the newly focused element is not descendant of this menu\r\n            // reset the current selection\r\n            this.reset();\r\n            // hide this menu if it has parent menu(is nested)\r\n            if (this.getParentMenu()) this.hide();\r\n        }\r\n\r\n        /**\r\n         * Sets all menu items in an inactive state.\r\n        */\r\n        reset() {\r\n            const menuItems = this.getAllMenuItems();\r\n            menuItems.forEach(menuItem => menuItem.selected = false);\r\n        }\r\n\r\n        /**\r\n         * Gets all active MenuItem child elements of the current Menu component.\r\n         * @returns {Array<MenuItem>} - the menu items of the menu component.\r\n        */\r\n        getAllMenuItems() {\r\n            return Array.from(this.children).filter(child => child.hasAttribute('disabled') === false);\r\n        }\r\n\r\n        /**\r\n         * Gets the previous MenuItem in the items list.\r\n         * If the current menu item is the first one - returns the last one.\r\n         * @returns {MenuItem} - the previous menu item.\r\n        */\r\n        getPrevMenuItem() {\r\n            const menuItems = this.getAllMenuItems();\r\n\r\n            let newIdx = menuItems.findIndex(menuItem => menuItem.selected) - 1;\r\n            // Add `menuItems.length` to make sure the index is a positive number\r\n            // and get the modulus to wrap around if necessary.\r\n            return menuItems[(newIdx + menuItems.length) % menuItems.length];\r\n        }\r\n\r\n        /**\r\n         * Gets the first menuItem in the menu items list.\r\n         * @returns {MenuItem} - the first menu item.\r\n        */\r\n        getFirstMenuItem() {\r\n            return this.getAllMenuItems()[0];\r\n        }\r\n\r\n        /**\r\n         * Gets the next menu item in the menu items list.\r\n         * If the current item is the last one - returns the first one.\r\n         * @returns {MenuItem} - the next menu item.\r\n        */\r\n        getNextMenuItem() {\r\n            const menuItems = this.getAllMenuItems();\r\n            let newIdx = menuItems.findIndex(menuItems => menuItems.selected) + 1;\r\n            return menuItems[newIdx % menuItems.length];\r\n        }\r\n\r\n        /**\r\n         * Gets the last item.\r\n         * @returns {MeuItem}\r\n        */\r\n        getLastMenuItem() {\r\n            const menuItems = this.getAllMenuItems();\r\n            return menuItems[menuItems.length - 1];\r\n        }\r\n\r\n        /**\r\n        * Sets a menuItem in an active state.\r\n        * The menuItem is highlighted.\r\n        * @param {MenuItem} newMenuItem - the menuItem which has been clicked on.\r\n        */\r\n        selectMenuItem(newMenuItem) {\r\n            // Deselect all menu items\r\n            this.reset();\r\n            newMenuItem.selected = true;\r\n            newMenuItem.focus();\r\n        }\r\n\r\n        /**\r\n         * Called on click\r\n         * @param {MouseEvent} event\r\n        */\r\n        onClick(event) {\r\n            event.stopPropagation();\r\n\r\n            // avoid all cases except when the target is a menu item\r\n            if (event.currentTarget.hasAttribute('disabled')) return;\r\n\r\n            this.selectMenuItem(event.currentTarget);\r\n\r\n            // if the click should open a submenu - open it and return\r\n            if (this.openSubmenu(event)) return;\r\n            // if the click should not open submenu - close the menu\r\n            this.close(event);\r\n        }\r\n\r\n        /**\r\n         * Gets the parent menu, if there is any\r\n         * @returns {HTMLElement} - the parent menu\r\n        */\r\n        getParentMenu() {\r\n            if (this.parentElement.tagName.toLowerCase() !== 'menu-item') return null;\r\n            return this.parentElement.parentElement;\r\n        }\r\n\r\n        /**\r\n         * Gets a nested menu\r\n         * @param {MenuItem} menuItem - the item in which to look for a nested menu\r\n         * @returns {HTMLElement} - the nested menu\r\n        */\r\n        getSubmenu(menuItem) {\r\n            return menuItem.querySelector(TAG_NAMES);\r\n        }\r\n\r\n        /**\r\n         * Opens a nested menu; practically shows itself if this is a nested menu\r\n         * but the action that triggers this function is showing a nested menu.\r\n         * @param {Event} event\r\n         * @returns {boolean} - true, if a menu was opened and false if not\r\n        */\r\n        openSubmenu(event) {\r\n            const submenu = this.getSubmenu(event.target);\r\n            if(!submenu) return false;\r\n\r\n            submenu.show();\r\n\r\n            // update the position of the menu items now that its relative parent is also visible\r\n            this.setupMenuItems();\r\n            submenu.select();\r\n\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Closes a nested menu; practically closes itself if this is a nested menu\r\n         * but the action that triggers this function is closing a nested menu.\r\n        */\r\n        close() {\r\n            const parentMenu = this.getParentMenu();\r\n            if(!parentMenu) return;\r\n            this.hide();\r\n            parentMenu.selectMenuItem(this.parentElement);\r\n        }\r\n\r\n        /**\r\n         * Gets the next menu item that should be selected\r\n         * @param {KeyboardEvent} event\r\n         * @returns {MenuItem | null}\r\n        */\r\n        getNextMenuItemFromKey(event) {\r\n            // The switch-case will determine which menu item should be marked as active\r\n            // depending on the key that was pressed.\r\n            switch (event.keyCode) {\r\n                case this.keyMapping.SELECT:\r\n                case this.keyMapping.CLOSE:\r\n                    this.close();\r\n                    break;\r\n                case this.keyMapping.FORWARD:\r\n                    return this.getNextMenuItem();\r\n                case this.keyMapping.BACK:\r\n                    return this.getPrevMenuItem();\r\n                case this.keyMapping.OPEN_SUBMENU:\r\n                    this.openSubmenu(event);\r\n                    break;\r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n\r\n        /***\r\n         * Selects a menu item by an index;\r\n         * @param {number} index\r\n        */\r\n        select(index = 0) {\r\n            // do nothing if there are no menu items or there is no item at this index\r\n            if (!this.getAllMenuItems().length || !this.getAllMenuItems()[index]) return;\r\n            this.selectMenuItem(this.getAllMenuItems()[index]);\r\n        }\r\n\r\n        /**\r\n         * Called on keydown\r\n         * @param {KeyboardEvent} event\r\n        */\r\n        onKeyDown(event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            if (event.target.tagName.toLowerCase() !== 'menu-item' || event.altKey) return;\r\n            const nextItem = this.getNextMenuItemFromKey(event);\r\n            if(nextItem) this.selectMenuItem(nextItem);\r\n        }\r\n\r\n        /**\r\n         * Sets the display property of this menu to flex\r\n        */\r\n        show() {\r\n           this.style.display = 'flex';\r\n        }\r\n\r\n        /*\r\n        * Sets the display property of this menu to none\r\n        */\r\n        hide() {\r\n           this.style.display = 'none';\r\n        }\r\n\r\n        /**\r\n         * Adds a class name to this element depending on its orientation\r\n         * Also sets the menu-wrapper class, which adds the display:flex style\r\n        */\r\n        setOrientation() {\r\n            this.classList.add('menu-wrapper');\r\n            this.classList.add(this.orientation);\r\n        }\r\n    }\r\n\r\n    class MenuItem extends HTMLElement {\r\n        static get observedAttributes() {\r\n            return ['selected', 'disabled'];\r\n        }\r\n\r\n        /**\r\n         * Called when an attribute changes\r\n        */\r\n        attributeChangedCallback() {\r\n            if(this.hasAttribute('disabled')) {\r\n                 // if the element is disabled, make it no longer selectable\r\n                 // by removing the tabindex\r\n                this.removeAttribute('tabindex');\r\n                // remove the mouseover and mouseout listeners so that it's\r\n                // not possible to hover the element\r\n                this.removeEventListener('mouseover', this.onMouseOver);\r\n                this.removeEventListener('mouseout', this.onMouseOut);\r\n            } else {\r\n                this.attachEventListeners();\r\n            }\r\n        }\r\n\r\n        connectedCallback() {\r\n            if(!this.hasAttribute('disabled')) {\r\n                this.setAttribute('tabindex', 0);\r\n            }\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            this.attachEventListeners();\r\n        }\r\n\r\n        /**\r\n         * Attaches mouseover and mouseout event listeners\r\n        */\r\n        attachEventListeners() {\r\n            this.addEventListener('mouseover', this.onMouseOver);\r\n            this.addEventListener('mouseout', this.onMouseOut);\r\n        }\r\n\r\n        /**\r\n         * Returns the selected attribute\r\n         * @returns {boolean} - the value of the selected attribute\r\n        */\r\n        get selected() {\r\n            return this.getAttribute('selected');\r\n        }\r\n\r\n        /**\r\n         * Sets the selected attribute\r\n         * @param {boolean} value - the new value of the selected attribute\r\n        */\r\n        set selected(value) {\r\n            if (value) {\r\n                this.setAttribute('selected', value);\r\n                this.classList.add('active-menu-item');\r\n            } else {\r\n                this.classList.remove('active-menu-item');\r\n                this.removeAttribute('selected');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Called on mouseover. Adds class hover.\r\n         * @param {MouseEvent} event\r\n        */\r\n        onMouseOver (event) {\r\n            event.stopPropagation();\r\n            const menuItem = event.target;\r\n\r\n            menuItem.classList.add('hover');\r\n        }\r\n\r\n        /**\r\n         * Called on mouseout. Removes class hover.\r\n         * @param {MouseEvent} event\r\n        */\r\n        onMouseOut (event) {\r\n            event.stopPropagation();\r\n            const menuItem = event.target;\r\n\r\n            if (!menuItem.classList.contains('hover')) return;\r\n            menuItem.classList.remove('hover');\r\n        }\r\n    }\r\n\r\n    components__default['default'].defineCustomElement('gameface-menu', GamefaceMenu);\r\n    components__default['default'].defineCustomElement('menu-item', MenuItem);\n\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Coherent Labs AD. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n\r\n    const KEYCODES$1 = components__default['default'].KEYCODES;\r\n\r\n    const KEY_MAPPING$1 = {\r\n        FORWARD: KEYCODES$1.DOWN,\r\n        BACK: KEYCODES$1.UP,\r\n        OPEN_SUBMENU: KEYCODES$1.RIGHT,\r\n        CLOSE: KEYCODES$1.ESCAPE,\r\n        SELECT: KEYCODES$1.ENTER,\r\n    };\r\n\r\n    class GamefaceLeftMenu extends GamefaceMenu {\r\n        constructor() {\r\n            super();\r\n\r\n            this.keyMapping = KEY_MAPPING$1;\r\n        }\r\n\r\n        /**\r\n         * Sets an inline style to properly position the element\r\n         * Different menus have use different properties - top, left, right or bottom\r\n         *\r\n         * @param {HTMLElement} element - the element that needs to be positioned\r\n         * @param {DOMRect} parentPosition - the bounding box of the parent element\r\n        */\r\n        setPosition(element, parentPosition) {\r\n            element.style.left = parentPosition.width + 'px';\r\n            element.style.top = '0px';\r\n        }\r\n    }\r\n\r\n    components__default['default'].defineCustomElement('gameface-left-menu', GamefaceLeftMenu);\n\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Coherent Labs AD. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n\r\n    const KEYCODES$2 = components__default['default'].KEYCODES;\r\n\r\n    const KEY_MAPPING$2 = {\r\n        FORWARD: KEYCODES$2.RIGHT,\r\n        BACK: KEYCODES$2.LEFT,\r\n        OPEN_SUBMENU: KEYCODES$2.UP,\r\n        CLOSE: KEYCODES$2.ESCAPE,\r\n        SELECT: KEYCODES$2.ENTER,\r\n    };\r\n\r\n    class GamefaceBottomMenu extends GamefaceMenu {\r\n        constructor() {\r\n            super();\r\n\r\n            this.keyMapping = KEY_MAPPING$2;\r\n        }\r\n\r\n        /**\r\n         * Sets an inline style to properly position the element\r\n         * Different menus have use different properties - top, left, right or bottom\r\n         *\r\n         * @param {HTMLElement} element - the element that needs to be positioned\r\n         * @param {DOMRect} parentPosition - the bounding box of the parent element\r\n        */\r\n        setPosition(element, parentPosition) {\r\n            element.style.left = '0px';\r\n            element.style.bottom = parentPosition.height + 'px';\r\n        }\r\n    }\r\n\r\n    components__default['default'].defineCustomElement('gameface-bottom-menu', GamefaceBottomMenu);\n\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Coherent Labs AD. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n\r\n    const KEYCODES$3 = components__default['default'].KEYCODES;\r\n\r\n    const KEY_MAPPING$3 = {\r\n        FORWARD: KEYCODES$3.DOWN,\r\n        BACK: KEYCODES$3.UP,\r\n        OPEN_SUBMENU: KEYCODES$3.LEFT,\r\n        CLOSE: KEYCODES$3.ESCAPE,\r\n        SELECT: KEYCODES$3.ENTER,\r\n    };\r\n\r\n    class GamefaceRightMenu extends GamefaceMenu {\r\n        constructor() {\r\n            super();\r\n\r\n            this.keyMapping = KEY_MAPPING$3;\r\n        }\r\n\r\n        /**\r\n         * Sets an inline style to properly position the element\r\n         * Different menus have use different properties - top, left, right or bottom\r\n         *\r\n         * @param {HTMLElement} element - the element that needs to be positioned\r\n         * @param {DOMRect} parentPosition - the bounding box of the parent element\r\n        */\r\n        setPosition(element, parentPosition) {\r\n            element.style.right = parentPosition.width + 'px';\r\n            element.style.top = '0px';\r\n        }\r\n    }\r\n\r\n    components__default['default'].defineCustomElement('gameface-right-menu', GamefaceRightMenu);\n\n})));\n\n\n//# sourceURL=webpack:///./components/menu/umd/menu.development.js?");

/***/ })

/******/ });