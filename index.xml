<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Gameface Game UI Components</title>
    <link>https://CoherentLabs.github.io/GameUIComponents/</link>
    <description>Recent content in Home on Gameface Game UI Components</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Oct 2020 14:00:45 +0000</lastBuildDate><atom:link href="https://CoherentLabs.github.io/GameUIComponents/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dropdown</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/dropdown/</link>
      <pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/dropdown/</guid>
      <description>The gameface-dropdown is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-dropdown
Usage The gameface-dropdown component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  import the gameface-dropdown component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-dropdown/umd/dropdown.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  add the gameface-dropdown component to your html:  &amp;lt;gameface-dropdown&amp;gt;&amp;lt;/gameface-dropdown&amp;gt; To add options to the dropdown use the option slot:</description>
    </item>
    
    <item>
      <title>Text-field</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/text-field/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/text-field/</guid>
      <description>The gameface-text-field is part of the Gameface custom components suite. As most of the components in this suite, it uses slots to allow dynamic content.
Installation npm i coherent-gameface-text-field
Usage The gameface-text-field component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;#34;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;  import the gameface-text-field component:  &amp;lt;script src=&amp;#34;./node_modules/coherent-gameface-text-field/umd/text-field.production.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;  add the gameface-text-field component to your HTML:  &amp;lt;gameface-text-field type=&amp;#34;text&amp;#34;&amp;gt;&amp;lt;/gameface-text-field&amp;gt; This is all!</description>
    </item>
    
    <item>
      <title>Text-field</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/text-field/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/text-field/</guid>
      <description>.text-fields-container { display: flex; flex-direction: row; flex-wrap: wrap; } .text-fields-container [type=search] { -webkit-appearance: none; outline-offset: unset; } .case { margin: 5px; } .guic-text-field-container { margin-bottom: 5px; } .custom-text-field-styles .guic-text-field-label { font-size: 2em; color: aqua; } .custom-text-field-styles .guic-text-field-with-controls { width: 300px; height: 50px; border-radius: 5px; border-color: red; background-color: black; } .custom-text-field-styles .guic-text-field { font-size: 20px; color: greenyellow; } .custom-text-field-styles { --text-field-number-arrow-color: yellow; --text-field-search-cross-color: yellow; } .custom-text-field-styles .guic-search-remove:hover { --text-field-search-cross-color: brown; } .</description>
    </item>
    
    <item>
      <title>Router</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/router/</link>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/router/</guid>
      <description>The gameface-router is part of the components suite. It is not a custom element like most of the components in this suite. It is a JavaScript library similar to the components library.
Installation npm i coherent-gameface-router
Importing the Router The router component comes with UMD and CJS builds.
With UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  import the gameface-router component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-router/umd/router.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; If you import the router using a script tag - a global variable router will be available.</description>
    </item>
    
    <item>
      <title>Router</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/router/</link>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/router/</guid>
      <description>.page-wrapper { height: 45vh; } .menu { display: flex; align-items: center; border: 1px solid #a5a3a3; height: 25px; margin-bottom: 25px; } body { background-color: #fff; } .active { color: var(--default-color-blue); } .healers-menu { display: flex; height: 135px; margin-bottom: 25px; } .avatar-container { display: flex; flex-direction: column; width: 100px; } .avatar { margin-bottom: 5px; min-height: 50px; height: 100px; background-size: contain; background-repeat: no-repeat no-repeat; } .avatar1 { background-image: url(/images/imgAvatar_2.png); } .avatar2 { background-image: url(/images/imgAvatar_3.</description>
    </item>
    
    <item>
      <title>Menu</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/menu/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/menu/</guid>
      <description>The gameface-menu is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-menu
Usage The gameface-menu component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the menu component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-menu/umd/menu.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the menu component to your html:  &amp;lt;gameface-menu&amp;gt;&amp;lt;/gameface-menu&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Menu</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/menu/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/menu/</guid>
      <description>   body { background-color: grey; width: 100%; height: 100%; margin: 0px; padding: 0px; } .left-menu, .right-menu { top: 20vh; } .page-wrapper { height: 45vh; }    Start Game Settings  Graphics Keyboard  Graphics Keyboard Mouse  Graphics Keyboard Mouse     Mouse    Hero Gallery Credits     </description>
    </item>
    
    <item>
      <title>Tabs</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/tabs/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/tabs/</guid>
      <description>The tabs component is part of the Gameface custom components suite. As most of the components in this suite, it uses slots to allow dynamic content.
Installation npm i coherent-gameface-tabs
Usage The tabs component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the tabs component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-tabs/umd/tabs.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the tabs component to your html:  &amp;lt;gameface-tabs&amp;gt;&amp;lt;/gameface-tabs&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Tabs</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/tabs/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/tabs/</guid>
      <description> Document.page-wrapper {position: relative;height: 45vh;}tab-panel {border-width: 2px;border-style: solid;padding: 10px;width: 496px;height: 205px;box-sizing: border-box;background-color: #ffffff;}Chapter OneChapter One ContentChapter TwoChapter Two ContentChapter ThreeChapter Three ContentChapter FourChapter Four Content</description>
    </item>
    
    <item>
      <title>Radio Button</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/radio-button/</link>
      <pubDate>Mon, 08 Mar 2021 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/radio-button/</guid>
      <description>body {width: 100vw;height: 100vh;justify-content: center;background-color: rgba(0, 0, 0, 0.5);color: #fff;}.section {margin-bottom: 15px;}.section-label {font-size: 24px;margin-bottom: 5px;}.radio-button {line-height: normal;}Targeting System:Tab TargetingAction CombatHUD Elements Placement:Locked (Default)Grid Slots (Sticky)Unlocked</description>
    </item>
    
    <item>
      <title>Accordion Menu</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/accordion-menu/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/accordion-menu/</guid>
      <description>The accordion-menu is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Usage The accordion-menu component comes with UMD and CJS builds.
Installation npm i coherent-gameface-accordion-menu
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  import the accordion-menu component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-accordion-menu/umd/accordion-menu.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  add the gameface-accordion-menu component to your html along with the gameface-accordion-panel, gameface-accordion-header and gameface-accordion-content:  &amp;lt;gameface-accordion-menu&amp;gt;&amp;lt;/gameface-accordion-menu&amp;gt; This is all!</description>
    </item>
    
    <item>
      <title>Accordion Menu</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/accordion-menu/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/accordion-menu/</guid>
      <description>.flex-box { display: flex; } .container-flex { width: 49vw; padding: 0 20px; }   Single  Long Text Lorem ipsum, dolor sit amet consectetur adipisicing elit. Eius, in! At nesciunt earum ea deserunt architecto animi quod neque dicta asperiores. Error aliquid facilis hic in culpa quisquam temporibus aliquam. Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores ea ipsam accusantium quasi placeat illo incidunt corrupti iste molestiae aut itaque molestias, laudantium sapiente, veritatis repudiandae rem, aspernatur dolore quisquam?</description>
    </item>
    
    <item>
      <title>Automatic Grid</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/automatic-grid/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/automatic-grid/</guid>
      <description>The automatic-grid is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-automatic-grid
Usage The automatic-grid component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the automatic-grid component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-automatic-grid/umd/automatic-grid.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the automatic-grid component to your html:  &amp;lt;gameface-automatic-grid&amp;gt;&amp;lt;/gameface-automatic-grid&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Automatic Grid</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/automatic-grid/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/automatic-grid/</guid>
      <description>  .page-wrapper { height: 45vh; } .automatic-grid-component { width: 100%; } .guic-row { margin: 0; } .guic-automatic-grid-container { border-right: 3px solid black; border-bottom: 3px solid black; } .automatic-grid-cell { border-top: 3px solid black; border-left: 3px solid black; display: flex; align-items: center; justify-content: center; } .box { width: 50px; height: 50px; display: flex; justify-content: center; align-items: center; background-color: cadetblue; color: white; font-size: 1.5rem; }     1 2 3 4 5 6     </description>
    </item>
    
    <item>
      <title>Checkbox</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/checkbox/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/checkbox/</guid>
      <description>The checkbox is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-checkbox
Usage The checkbox component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the checkbox component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-checkbox/umd/checkbox.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the checkbox component to your html:  &amp;lt;gameface-checkbox class=&amp;quot;checkbox-component&amp;quot;&amp;gt;&amp;lt;/gameface-checkbox&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Checkbox</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/checkbox/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/checkbox/</guid>
      <description>Document.page-wrapper {height: 45vh;}Enable Music</description>
    </item>
    
    <item>
      <title>Dropdown</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/dropdown/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/dropdown/</guid>
      <description>   scrollable-content, .wrapper { width: 100%; height: 200px; } .vertical-slider-wrapper { height: 200px; } .page-wrapper { height: 45vh; } gameface-dropdown { line-height: 100%; }    Cat1 Cat1 Cat1 Cat3 Cat4 Dog Giraffe Lion Pig Eagle Parrot Last Parrot Last Parrota Last Parrot     </description>
    </item>
    
    <item>
      <title>Grid</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/grid/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/grid/</guid>
      <description>The grid is part of the Gameface components suite. It provides a set of styles which enable the creation of a responsive grid.
Installation npm i coherent-gameface-grid
Usage First you need to import the grid library:
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;&amp;lt;path_to_grid.css&amp;gt;&amp;quot;&amp;gt;Or if you use a css-loader:
import grid from &#39;coherent-gameface-grid&#39;;The grid is made up of rows and columns. It is like a table. Each cell has a responsive width. The grid can have 12 columns.</description>
    </item>
    
    <item>
      <title>Grid</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/grid/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/grid/</guid>
      <description>Document.box {box-sizing: border-box;background: #25a5d6;margin-bottom: 1rem;height: 4rem;}body {font-size: 16px;background-color: #ffffff;}.title {margin-bottom: 3rem;}.selected {transform: scale(1.2);}.avatar {margin-bottom: 2rem;min-height: 21vw;background-size: contain;background-repeat: no-repeat no-repeat;}.avatar-container {z-index: 1;}.avatar-container:hover {z-index: 3;}.avatar:hover,.class:hover {cursor: pointer;transform: scale(1.2);}.avatar1 {background-image: url(/images/avatar1.png);}.avatar2 {background-image: url(/images/avatar2.</description>
    </item>
    
    <item>
      <title>Modal</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/modal/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/modal/</guid>
      <description>The modal is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-modal
Usage The modal component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the modal component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-modal/umd/modal.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the modal component to your html:  &amp;lt;gameface-modal&amp;gt;&amp;lt;/gameface-modal&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Modal</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/modal/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/modal/</guid>
      <description>.page-wrapper {height: 45vh;}.character-customization {display: flex;flex-direction: row;}.save {margin-left: 10px;}.hidden {display: none;}.disabled {background-color: #eeeeee;color: #7b7878;pointer-events: none;}.modal-button {width: 100px;height: 30px;border: none;background-color: #adacac;}.modal-button:hover {background-color: rgb(121, 123, 131);}.actions {display: flex;flex-direction: row;justify-content: center;}.confirmation-text {text-align: center;}.controls {margin-left: 20px;}Chose a name for your character.</description>
    </item>
    
    <item>
      <title>Progress Bar</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/progress-bar/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/progress-bar/</guid>
      <description>The progress-bar is part of the Gameface custom components suite.
Installation npm i coherent-gameface-progress-bar
Usage The progress-bar component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the progress-bar component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-progress-bar/umd/progress-bar.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the progress-bar component to your html:  &amp;lt;gameface-progress-bar&amp;gt;&amp;lt;/gameface-progress-bar&amp;gt;Configuration and usage is explained further down the document.
Import using ES modules:
import components from &#39;coherent-gameface-components&#39;;import progressBar from &#39;coherent-gameface-progress-bar&#39;;Note that this approach requires a module bundler like Webpack or Rollup to resolve the modules from the node_modules folder.</description>
    </item>
    
    <item>
      <title>Progress Bar</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/progress-bar/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/progress-bar/</guid>
      <description>.page-wrapper { position: relative; color: #000; font-size: 3vh; height: 45vh; } .progress-bar-wrapper-one, .progress-bar-wrapper-two, .progress-bar-wrapper-three { position: absolute; top: 0vh; width: 100%; height: 15px; } .progress-bar-wrapper-two { top: 10vh; } .progress-bar-wrapper-three { top: 20vh; }    0% - 100% with 2000ms animation duration.   0% - 100% with no animation.   Random progress set on random interval between 250 and 750 ms with 1000ms animation duration.</description>
    </item>
    
    <item>
      <title>Radial Menu</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/radial-menu/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/radial-menu/</guid>
      <description>The radial-menu is part of the Gameface custom Components suite.
Installation npm i coherent-gameface-radial-menu
Usage The radial-menu Component comes with UMD and CJS builds.
Usage with UMD modules:  import the Components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the radial-menu Component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-radial-menu/umd/radial-menu.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the radial-menu Component to your html:  &amp;lt;gameface-radial-menu&amp;gt;&amp;lt;/gameface-radial-menu&amp;gt;This is all! Load the file in Gameface to see the radial-menu.
Import using ES modules:</description>
    </item>
    
    <item>
      <title>Radial Menu</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/radial-menu/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/radial-menu/</guid>
      <description>body { width: 100vw; height: 100vh; margin: 0; overflow: hidden; background-color: rgba(0, 0, 0, 0.5); } .radial-menu-component { position: absolute; left: 40vw; top: 20vh; } .radial-menu-component-two { position: absolute; right: 5vw; top: 15vh; } .page-wrapper { height: 45vh; }    Hold the Left Shift button to show the menu.
     const radialMenuOne = document.getElementById(&#39;radial-menu-one&#39;); // Provide the items. radialMenuOne.items = itemsModel.items; const radialMenuTwo = document.</description>
    </item>
    
    <item>
      <title>Radio Button</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/radio-button/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/radio-button/</guid>
      <description>The radio-button is part of the Gameface custom components suite.
Usage The radio-button component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the radio-button component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-radio-button/umd/coherent-gameface-radio-button.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the radio-button group and button custom Elements to your html:  &amp;lt;gameface-radio-group&amp;gt;&amp;lt;radio-button slot=&amp;quot;radio-button&amp;quot;&amp;gt;&amp;lt;/radio-button&amp;gt;&amp;lt;radio-button slot=&amp;quot;radio-button&amp;quot;&amp;gt;&amp;lt;/radio-button&amp;gt;&amp;lt;/gameface-radio-group&amp;gt;Configuration and usage is explained further down the document.
Import using ES modules:</description>
    </item>
    
    <item>
      <title>Rangeslider</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/rangeslider/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/rangeslider/</guid>
      <description>The gameface-rangeslider is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-rangeslider
Usage The gameface-rangeslider component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the gameface-rangeslider component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-rangeslider/umd/rangeslider.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the gameface-rangeslider component to your html:  &amp;lt;gameface-rangeslider&amp;gt;&amp;lt;/gameface-rangeslider&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Rangeslider</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/rangeslider/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/rangeslider/</guid>
      <description>   gameface-rangeslider { /* reset the :root styles comming from Hugo&#39;s theme.min.css in order to show the thumb correctly */ line-height: normal; } .flex-container { display: flex; flex-direction: row; flex-wrap: wrap; align-items: center; }      Current value:     Current left value:  Current right value:     Current value:       Current value:    Current value:    Current value:  Current value:      </description>
    </item>
    
    <item>
      <title>Scrollable Container</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/scrollable-container/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/scrollable-container/</guid>
      <description>The gameface-scrollable-container is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-scrollable-container
Usage The gameface-scrollable-container component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the gameface-scrollable-container component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-scrollable-container/umd/scrollable-container.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the gameface-scrollable-container component to your html:  &amp;lt;gameface-scrollable-container class=&amp;quot;gameface-scrollable-container-component&amp;quot;&amp;gt;&amp;lt;/gameface-scrollable-container&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Scrollable Container</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/scrollable-container/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/scrollable-container/</guid>
      <description>gameface-slider.slider-component { width: 30px; } .scrollable-container { width: 70%; height: 30vw; } .vertical-slider-wrapper { height: 30vw; }     Lorem ipsum dolor sit amet, consectetur adipiscing elit. In eu urna tempus, ultricies lacus fermentum, posuere arcu. Ut eget elit magna. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse feugiat auctor finibus. Ut in euismod magna. Fusce eget dapibus arcu. Curabitur laoreet elit id lobortis tristique.</description>
    </item>
    
    <item>
      <title>Slider</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/slider/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/slider/</guid>
      <description>The gameface-slider is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-slider
Usage The gameface-slider component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the gameface-slider component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-slider/umd/slider.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the gameface-slider component to your html:  &amp;lt;gameface-slider class=&amp;quot;gameface-slider-component&amp;quot;&amp;gt;&amp;lt;/gameface-slider&amp;gt;This is all!</description>
    </item>
    
    <item>
      <title>Slider</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/slider/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/slider/</guid>
      <description>   .horiontal-slider-component { margin-left: 100px; }        </description>
    </item>
    
    <item>
      <title>Switch</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/switch/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/switch/</guid>
      <description>The gameface-switch is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Usage The gameface-switch component comes with UMD and CJS builds.
Installation npm i coherent-gameface-switch
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  import the gameface-switch component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-switch/umd/switch.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  add the gameface-switch component to your html:  &amp;lt;gameface-switch&amp;gt;&amp;lt;/gameface-switch&amp;gt; This is all!</description>
    </item>
    
    <item>
      <title>Switch</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/switch/</link>
      <pubDate>Thu, 08 Oct 2020 14:00:45 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/switch/</guid>
      <description>  .row { display: flex; } .cell { width: 25%; display: flex; align-items: center; justify-content: center; height: 50px; }    type=&#34;default&#34; type=&#34;inset&#34; type=&#34;text-inside&#34;  Unchecked  Off On   Off On   Off On    Checked Off On   Off On   Off On    Unchecked disabled Off On   Off On   Off On    Checked disabled Off On   Off On   Off On       </description>
    </item>
    
    <item>
      <title>Tooltip</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/components/tooltip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/components/tooltip/</guid>
      <description>The tooltip is part of the Gameface custom components suite. As most of the components in this suite it uses slots to allow dynamic content.
Installation npm i coherent-gameface-tooltip
Usage The tooltip component comes with UMD and CJS builds.
Usage with UMD modules:  import the components library:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-components/umd/components.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; import the tooltip component:  &amp;lt;script src=&amp;quot;./node_modules/coherent-gameface-tooltip/umd/tooltip.production.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; add the tooltip component to your html:  &amp;lt;gameface-tooltip target=&amp;quot;.container&amp;quot;&amp;gt;&amp;lt;div slot=&amp;quot;message&amp;quot;&amp;gt;Hello!</description>
    </item>
    
    <item>
      <title>Tooltip</title>
      <link>https://CoherentLabs.github.io/GameUIComponents/examples/tooltip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://CoherentLabs.github.io/GameUIComponents/examples/tooltip/</guid>
      <description>Document  body { margin: 0; } .rows { display: flex; flex-direction: row; align-items: center; position: absolute; top: 200px; width: 100%; } .column { display: flex; flex-direction: column; align-items: center; flex: 1; padding: 10px; } .min-width-column { min-width: 550px; } .auto, .manual, .async { width: 150px; text-align: center; background-color: #6e6d6d; color: #ffffff; padding: 10px; } .container { display: flex; flex-direction: column; } .title, .button { height: 40px; background-color: var(--default-color-gray); display: flex; justify-content: center; align-items: center; } .</description>
    </item>
    
  </channel>
</rss>
