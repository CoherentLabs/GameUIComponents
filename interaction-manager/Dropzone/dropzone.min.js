var dropzone=(()=>{var c=(n,e)=>()=>(n&&(e=n(n=0)),e);var z=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var p,M,b=c(()=>{p=class{constructor(e){this.draggableElements=[],this.draggedElement=null,this.enabled=!1,this.onMouseDown=this.onMouseDown.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.options=e}get draggedItemIndex(){return[...this.draggableElements].indexOf(this.draggedElement)}get bodyScrollOffset(){return{x:document.body.scrollLeft,y:document.body.scrollTop}}},M=p});function y(){return(Math.random()+1).toString(36).substring(7)}var x=c(()=>{});var u,l,E=c(()=>{u=class{constructor(){this.actions=[],this.keyboardFunctions=[],this.gamepadFunctions=[]}init(){window._IM||(window._IM=new u)}getKeys(e){return _IM.keyboardFunctions.filter(t=>t.keys.every(s=>e.includes(s)))}getKeysIndex(e){return _IM.keyboardFunctions.findIndex(t=>t.keys.every(s=>e.includes(s)))}getGamepadAction(e){return _IM.gamepadFunctions.find(t=>t.actions.every(s=>e.includes(s)))}getGamepadActionIndex(e){return _IM.gamepadFunctions.findIndex(t=>t.actions.every(s=>e.includes(s)))}getAction(e){return _IM.actions.find(t=>t.name===e)}getActionIndex(e){return _IM.actions.findIndex(t=>t.name===e)}},l=new u});var v,g,L=c(()=>{E();v=class{register(e,t){if(l.getAction(e))return console.error(`The following action "${e}" is already registered!`);_IM.actions.push({name:e,callback:t})}remove(e){let t=l.getActionIndex(e);if(t===-1)return console.error(`${e} is not a registered action!`);_IM.actions.splice(t,1)}execute(e,t){let s=l.getAction(e);if(!s)return console.error(`${e} is not a registered action!`);s.callback(t)}},g=new v});var f,A,I=c(()=>{b();x();L();f=class extends M{constructor(e){super(e);let t=y();this.dropzones=[],this.draggedOver=null,this.actionName=`drag-and-drop-${t}`,this.automaticAction=`move-to-${t}`,this.onMouseEnter=this.onMouseEnter.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this),this.init()}init(){if(!this.enabled){if(this.draggableElements=document.querySelectorAll(this.options.element),this.draggableElements.length===0)return console.error(`${this.options.element} is not a valid element selector.`);this.draggableElements.forEach(e=>e.addEventListener("mousedown",this.onMouseDown)),this.createDropzones(),this.dropzones.length!==0&&(this.dropzones.forEach(e=>{e.addEventListener("mouseenter",this.onMouseEnter),e.addEventListener("mouseleave",this.onMouseLeave)}),this.registerDragActions(),this.enabled=!0)}}deinit(){!this.enabled||(this.draggableElements.forEach(e=>e.removeEventListener("mousedown",this.onMouseDown)),this.dropzones.forEach(e=>{e.removeEventListener("mouseenter",this.onMouseEnter),e.removeEventListener("mouseleave",this.onMouseLeave)}),this.removeActions(),this.enabled=!1)}onMouseDown(e){this.draggedElement=e.currentTarget,this.draggedElement.style.position="absolute",this.draggedElement.style.pointerEvents="none",this.options.dragStyle&&this.draggedElement.classList.add(this.options.dragStyle),this.options.onDragStart&&this.options.onDragStart(this.draggedElement),document.addEventListener("mousemove",this.onMouseMove),document.addEventListener("mouseup",this.onMouseUp)}onMouseMove(e){g.execute(this.actionName,{x:e.clientX+this.bodyScrollOffset.x,y:e.clientY+this.bodyScrollOffset.y,index:this.draggedItemIndex})}onMouseUp(){document.removeEventListener("mousemove",this.onMouseMove),document.removeEventListener("mouseup",this.onMouseUp),this.draggedElement.style.position="",this.draggedElement.style.pointerEvents="",this.draggedElement.style.left="",this.draggedElement.style.top="",this.options.onDragEnd&&this.options.onDragEnd(this.draggedElement),this.options.dragStyle&&this.draggedElement.classList.remove(this.options.dragStyle),this.draggedOver&&this.handleDrop(),this.draggedElement=null}onMouseEnter(e){!this.draggedElement||(this.draggedOver=e.currentTarget,this.options.dropzoneActiveClass&&this.draggedOver.classList.add(this.options.dropzoneActiveClass))}onMouseLeave(){!this.draggedElement||(this.options.dropzoneActiveClass&&this.draggedOver&&this.draggedOver.classList.remove(this.options.dropzoneActiveClass),this.draggedOver=null)}registerDragActions(){g.register(this.actionName,({x:e,y:t,index:s})=>{if(!this.draggableElements[s])return console.error(`There is no draggable element at index ${s}`);this.draggableElements[s].style.left=`${e}px`,this.draggableElements[s].style.top=`${t}px`,this.options.onDragMove&&this.options.onDragMove({x:e,y:t})}),g.register(this.automaticAction,this.automaticMove.bind(this)),this.actionsRegistered=!0}removeActions(){g.remove(this.actionName),g.remove(this.automaticAction)}automaticMove({elementIndex:e,dropzoneIndex:t}){let{x:s,y:d}=this.dropzones[t].getBoundingClientRect(),{x:m,y:o}=this.draggableElements[e].getBoundingClientRect(),h={x:Math.sign(s-m),y:Math.sign(d-o)};this.draggableElements[e].style.position="absolute";let a=(i,r)=>{if(i===s&&r===d){this.dropzones[t].appendChild(this.draggableElements[e]),this.draggableElements[e].style.position="";return}i=i!==s?h.x+i:i,r=r!==d?h.y+r:r,this.draggableElements[e].style.left=`${i}px`,this.draggableElements[e].style.top=`${r}px`,(i!==s||r!==d)&&requestAnimationFrame(()=>a(i,r))};a(m,o)}createDropzones(){this.dropzones=this.options.dropzones.reduce((e,t)=>{let s=[...document.querySelectorAll(t)];return s.length===0&&console.error(`${t} is not a valid html element to be used as a dropzone`),e.concat(s)},[])}handleDrop(){let e=this.options.dropType;switch(this.draggedOver.children.length===0&&(e="add"),e){case"add":this.draggedOver.appendChild(this.draggedElement);break;case"shift":this.shiftElements();break;case"switch":this.draggedElement.parentNode.appendChild(this.draggedOver.children[0]),this.draggedOver.appendChild(this.draggedElement);break;case"none":break;default:break}this.onMouseLeave()}shiftElements(){let e=this.dropzones.findIndex(o=>o===this.draggedOver),t=this.dropzones.map(o=>o.children[0]===this.draggedElement?[]:[...o.children]),s=t.reduce((o,h,a)=>(h.length===0&&(o=Math.abs(e-a)<Math.abs(e-o)?a:o),o),1e5),d=Math.sign(e-s)>0?0:1,m=Math.sign(e-s)<0?0:1;t.splice(e+m,0,[this.draggedElement]),t.splice(s+d,1),t.forEach((o,h)=>{o.forEach(a=>this.dropzones[h].appendChild(a))})}},A=f});var O=z((B,D)=>{I();E();l.init();D.exports=A});return O();})();
//# sourceMappingURL=dropzone.min.js.map
